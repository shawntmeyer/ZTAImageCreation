{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.21.1.54444",
      "templateHash": "4030000799019839164"
    }
  },
  "parameters": {
    "deploymentLocation": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Deployment location. Note that the compute resources will be deployed to the region where the subnet is location."
      }
    },
    "deploymentPrefix": {
      "type": "string",
      "defaultValue": "",
      "maxLength": 6,
      "metadata": {
        "description": "Value to prepend to the deployment names."
      }
    },
    "timeStamp": {
      "type": "string",
      "defaultValue": "[utcNow('yyMMddHHmm')]",
      "metadata": {
        "description": "Value appended to the deployment names."
      }
    },
    "imageVersionCreationTime": {
      "type": "string",
      "defaultValue": "[utcNow()]",
      "metadata": {
        "description": "The current time in ISO 8601 format. Do not modify."
      }
    },
    "guidValue": {
      "type": "string",
      "defaultValue": "[newGuid()]"
    },
    "envClassification": {
      "type": "string",
      "defaultValue": "",
      "allowedValues": [
        "Dev",
        "Test",
        "Prod",
        ""
      ],
      "metadata": {
        "description": "Optional. The environment for which the images are being created."
      }
    },
    "computeGalleryResourceId": {
      "type": "string",
      "metadata": {
        "description": "Azure Compute Gallery Resource Id."
      }
    },
    "storageAccountResourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource Id of the storage account containing the artifacts (scripts, installers, etc) used during the image build."
      }
    },
    "containerName": {
      "type": "string",
      "metadata": {
        "description": "The name of the storage blob container which contains the artifacts (scripts, installers, etc) used during the image build."
      }
    },
    "userAssignedIdentityResourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource Id of the user assigned managed identity used to access the storage account."
      }
    },
    "subnetResourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource Id of the subnet to which the image build VM will be attached."
      }
    },
    "imageBuildResourceGroupId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The resource Id of an existing resource group in which to create the vms to build the image. Leave blank to create a new resource group."
      }
    },
    "customBuildResourceGroupName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The custom name of the resource group where the image build and management vms will be created. Leave blank to create a new resource group based on Cloud Adoption Framework naming principals."
      }
    },
    "publisher": {
      "type": "string",
      "metadata": {
        "description": "The Marketplace Image publisher"
      }
    },
    "offer": {
      "type": "string",
      "metadata": {
        "description": "The Marketplace Image offer"
      }
    },
    "sku": {
      "type": "string",
      "metadata": {
        "description": "The Marketplace Image sku"
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the Image build and Management VMs."
      }
    },
    "securityType": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "ConfidentialVM",
        "TrustedLaunch"
      ]
    },
    "enableAcceleratedNetworking": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Specifies whether the network interface is accelerated networking-enabled."
      }
    },
    "tenantType": {
      "type": "string",
      "defaultValue": "Commercial",
      "allowedValues": [
        "Commercial",
        "DepartmentOfDefense",
        "GovernmentCommunityCloud",
        "GovernmentCommunityCloudHigh"
      ],
      "metadata": {
        "description": "Used to select the correct version of certain office components to install."
      }
    },
    "installAccess": {
      "type": "bool",
      "defaultValue": false
    },
    "installExcel": {
      "type": "bool",
      "defaultValue": false
    },
    "installOneDriveForBusiness": {
      "type": "bool",
      "defaultValue": false
    },
    "installOneNote": {
      "type": "bool",
      "defaultValue": false
    },
    "installOutlook": {
      "type": "bool",
      "defaultValue": false
    },
    "installPowerPoint": {
      "type": "bool",
      "defaultValue": false
    },
    "installProject": {
      "type": "bool",
      "defaultValue": false
    },
    "installpublisher": {
      "type": "bool",
      "defaultValue": false
    },
    "installSkypeForBusiness": {
      "type": "bool",
      "defaultValue": false
    },
    "installTeams": {
      "type": "bool",
      "defaultValue": false
    },
    "installVirtualDesktopOptimizationTool": {
      "type": "bool",
      "defaultValue": false
    },
    "installVisio": {
      "type": "bool",
      "defaultValue": false
    },
    "installWord": {
      "type": "bool",
      "defaultValue": false
    },
    "vDotInstaller": {
      "type": "string",
      "defaultValue": "VDOT"
    },
    "officeInstaller": {
      "type": "string",
      "defaultValue": "Office365-Install.zip"
    },
    "teamsInstaller": {
      "type": "string",
      "defaultValue": "teams.exe"
    },
    "msrdcwebrtcsvcInstaller": {
      "type": "string",
      "defaultValue": "string"
    },
    "vcRedistInstaller": {
      "type": "string",
      "defaultValue": "vsstudio.exe"
    },
    "customizations": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "An array of image customizations consisting of the blob name and parameters.\r\nBICEP example:\r\n[\r\n  {\r\n    name: 'FSLogix'\r\n    blobName: 'Install-FSLogix.zip'\r\n    arguments: 'latest'\r\n  }\r\n  {\r\n    name: 'VSCode'\r\n    blobName: 'VSCode.zip'\r\n    arguments: ''\r\n  }\r\n]\r\n"
      }
    },
    "collectCustomizationLogs": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Collect image customization logs."
      }
    },
    "blobPrivateDnsZoneResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Conditional. The resource id of the existing Azure storage account blob service private dns zone.\r\nMust be provided if [collectCustomizationLogs] is set to \"true\".\r\nThis zone must be linked to or resolvable from the vnet referenced in the [privateEndpointSubnetResourceId] parameter."
      }
    },
    "privateEndpointSubnetResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Conditional. The resource id of the private endpoint subnet. Must be provided if [collectCustomizationLogs] is set to \"true\"."
      }
    },
    "imageDefinitionResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The resource id of an existing Image Definition in the Compute gallery."
      }
    },
    "customImageDefinitionName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Conditional. The name of the image Definition to create in the Compute Gallery.\r\nOnly valid if [imageDefinitionResourceId] is not provided.\r\nIf left blank, the image definition name will be built on Cloud Adoption Framework principals and based on the [imageDefinitonPublisher], [imageDefinitionOffer], and [imageDefinitionSku] values."
      }
    },
    "imageDefinitionPublisher": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Conditional. The compute gallery image definition Publisher."
      }
    },
    "imageDefinitionOffer": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Conditional. The computer gallery image definition Offer."
      }
    },
    "imageDefinitionSku": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Conditional. The compute gallery image definition Sku."
      }
    },
    "autoImageVersionName": {
      "type": "string",
      "defaultValue": "[utcNow('yy.MMdd.hhmm')]",
      "metadata": {
        "description": "Automatically generated Image Version name."
      }
    },
    "imageMajorVersion": {
      "type": "int",
      "defaultValue": -1,
      "minValue": -1,
      "maxValue": 9999,
      "metadata": {
        "description": "Optional. The image major version from 0 - 9999.\r\nIn order to specify a custom image version you must specify the [imageMajorVersion], [imageMinorVersion], and [imagePatch] integer from 0-9999."
      }
    },
    "imageMinorVersion": {
      "type": "int",
      "defaultValue": -1,
      "minValue": -1,
      "maxValue": 9999,
      "metadata": {
        "description": "Optional. The image minor version from 0 - 9999.\r\nIn order to specify a custom image version you must specify the [imageMajorVersion], [imageMinorVersion], and [imagePatch] integer from 0-9999."
      }
    },
    "imagePatch": {
      "type": "int",
      "defaultValue": -1,
      "minValue": -1,
      "maxValue": 9999,
      "metadata": {
        "description": "Optional. The image patch version from 0 - 9999.\r\nIn order to specify a custom image version you must specify the [imageMajorVersion], [imageMinorVersion], and [imagePatch] integer from 0-9999."
      }
    },
    "imageVersionEOLinDays": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Optional. The number of days from now that the image version will reach end of life."
      }
    },
    "imageVersionExcludeFromLatest": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Exclude the image version created by this process from the latest version for the image definition."
      }
    },
    "imageVersionStorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Premium_LRS",
        "Standard_LRS",
        "Standard_ZRS"
      ],
      "metadata": {
        "description": "Optional. Specifies the storage account type to be used to store the image. This property is not updatable."
      }
    },
    "replicationRegions": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. The regions to which the image version will be replicated in addition to the location of the deployment."
      }
    },
    "replicaCount": {
      "type": "int",
      "metadata": {
        "description": "The number of replicas in the primary region of the image version."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. The tags to apply to all resources deployed by this template."
      }
    }
  },
  "resources": [],
  "outputs": {
    "deploymentLocation": {
      "type": "string",
      "value": "[parameters('deploymentLocation')]"
    },
    "deploymentPrefix": {
      "type": "string",
      "value": "[parameters('deploymentPrefix')]"
    },
    "envClassification": {
      "type": "string",
      "value": "[parameters('envClassification')]"
    },
    "computeGalleryResourceId": {
      "type": "string",
      "value": "[parameters('computeGalleryResourceId')]"
    },
    "storageAccountResourceId": {
      "type": "string",
      "value": "[parameters('storageAccountResourceId')]"
    },
    "containerName": {
      "type": "string",
      "value": "[parameters('containerName')]"
    },
    "userAssignedIdentityResourceId": {
      "type": "string",
      "value": "[parameters('userAssignedIdentityResourceId')]"
    },
    "subnetResourceId": {
      "type": "string",
      "value": "[parameters('subnetResourceId')]"
    },
    "imageBuildResourceGroupId": {
      "type": "string",
      "value": "[parameters('imageBuildResourceGroupId')]"
    },
    "customBuildResourceGroupName": {
      "type": "string",
      "value": "[parameters('customBuildResourceGroupName')]"
    },
    "publisher": {
      "type": "string",
      "value": "[parameters('publisher')]"
    },
    "offer": {
      "type": "string",
      "value": "[parameters('publisher')]"
    },
    "sku": {
      "type": "string",
      "value": "[parameters('sku')]"
    },
    "customizations": {
      "type": "array",
      "value": "[parameters('customizations')]"
    },
    "collectCustomizationLogs": {
      "type": "bool",
      "value": "[parameters('collectCustomizationLogs')]"
    },
    "blobPrivateDnsZoneResourceId": {
      "type": "string",
      "value": "[parameters('blobPrivateDnsZoneResourceId')]"
    },
    "privateEndpointSubnetResourceId": {
      "type": "string",
      "value": "[parameters('privateEndpointSubnetResourceId')]"
    },
    "imageDefinitionResourceId": {
      "type": "string",
      "value": "[parameters('imageDefinitionResourceId')]"
    },
    "customImageDefinitionName": {
      "type": "string",
      "value": "[parameters('customImageDefinitionName')]"
    },
    "imageDefinitionPublisher": {
      "type": "string",
      "value": "[parameters('imageDefinitionPublisher')]"
    },
    "imageDefinitionOffer": {
      "type": "string",
      "value": "[parameters('imageDefinitionOffer')]"
    },
    "imageDefinitionSku": {
      "type": "string",
      "value": "[parameters('imageDefinitionSku')]"
    },
    "imageMajorVersion": {
      "type": "int",
      "value": "[parameters('imageMajorVersion')]"
    },
    "imageMinorVersion": {
      "type": "int",
      "value": "[parameters('imageMinorVersion')]"
    },
    "imagePatch": {
      "type": "int",
      "value": "[parameters('imagePatch')]"
    },
    "imageVersionEOLinDays": {
      "type": "int",
      "value": "[parameters('imageVersionEOLinDays')]"
    },
    "imageVersionExcludeFromLatest": {
      "type": "bool",
      "value": "[parameters('imageVersionExcludeFromLatest')]"
    },
    "imageVersionStorageAccountType": {
      "type": "string",
      "value": "[parameters('imageVersionStorageAccountType')]"
    },
    "replicationRegions": {
      "type": "array",
      "value": "[parameters('replicationRegions')]"
    },
    "replicaCount": {
      "type": "int",
      "value": "[parameters('replicaCount')]"
    },
    "tags": {
      "type": "object",
      "value": "[parameters('tags')]"
    }
  }
}